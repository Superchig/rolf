# This is a basic workflow to help you get started with Actions

name: pre-release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "pre-release"
  pre-release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Restore Rust cache
      - uses: Swatinem/rust-cache@v1
      
      - name: Make a Linux amd64 build
        run: cargo build --release --locked
      
      - name: Create distributable archive
        run: |
          ARCHIVE_DIR=rolf-linux-amd64
          mkdir "$ARCHIVE_DIR"
          cp -t "$ARCHIVE_DIR" target/release/rolf
          chmod +x "$ARCHIVE_DIR"/rolf

          cp -t "$ARCHIVE_DIR" LICENSE

          echo "$GITHUB_SHA" > "$ARCHIVE_DIR"/prerelease-commit-sha

          tar czf "$ARCHIVE_DIR".tar.gz "$ARCHIVE_DIR"
      
      - run: |
          echo "NAME_WITH_SHA=Pre-release $GITHUB_SHA" >> $GITHUB_ENV
      
      - name: Delete old tag
        uses: dev-drprasad/delete-older-releases@v0.2.0
        with:
          # repo: <owner>/<repoName> # defaults to current repo
          keep_latest: 0
          delete_tag_pattern: latest # defaults to ""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Make pre-release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            rolf-linux-amd64.tar.gz
          name: ${{ env.NAME_WITH_SHA }}
          prerelease: true
          tag_name: latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
